nc %>%
group_by(habit) %>%
summarise(mean_weight = n())
?inference
??inference
load("C:/Users/sig35/Desktop/inference.RData")
View(inference)
View(plot_ci)
View(plot_ci)
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
View(plot_ci)
View(normTail)
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
method = "theoretical", order = c("smoker","nonsmoker"))
??\ttest
??ttest
habit
nc$habit
t.test(nc$weight, nc$habit)
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
t.test(nc$weight, nc$habit)
t.test( nc$habit, nc$weight)
summary(nc$weight, nc$habit)
summary(nc$weight)
summary(nc$habit)
t.test( nc$habit, nc$weight)
nc_t <- nc %>% selec(weight, habit) %>% na.omit()
nc_t <- nc %>% select(weight, habit) %>% na.omit()
summary(nc_t)
t.test(nc_t$habit, nc_t$weight)
nc_t <- nc %>% select(weight, as.numeric(habit)) %>% na.omit()
summary(nc$habit)
summary(nc_t)
nc
nc_t
nc_t$as.numeric(habit)
nc_t$habit <- as.numeric(nc_t$habit )
summary(nc_t)
t.test(nc_t$habit, nc_t$weight)
inference(y = weight, x = habit, data = nc_t, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
t.test(nc_t$habit, nc_t$weight)
t.test(as.factor(nc_t$habit), nc_t$weight)
t.test(nc_t$habit, nc_t$weight)
summary(nc_t)
nc_t
View(normTail)
t.test(nc_t$habit, nc_t$weight)
t.test(nc_t$weight, nc_t$habit)
inference(y = weight, x = habit, data = nc_t, statistic = "mean", type = c("ht", "ci"), null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc_t, statistic = "mean", type =  "ci", null = 0,
alternative = "twosided", method = "theoretical")
t.test(nc_t$weight, nc_t$habit)
6.8287+0.0508
inference(y = weight, x = habit, data = nc_t, statistic = "mean", type =  "ht", null = 0, alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "twosided", method = "theoretical")
library(tidyverse)
library(haven)
write_dta
write_dta(nc, "nc.dta")
getwd()
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "less", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "more", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "greater", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "twosided", method = "simulation")
inference(y = weight, x = habit, data = nc_t, statistic = "mean", type =  "ht", null = 0, alternative = "twosided", method = "simulation")
inference(y = weight, x = habit, data = nc_t, statistic = "mean", type =  "ci", null = 0, alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ci", null = 0, alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "twosided", method = "theoretical")
View(normTail)
View(inference)
View(inference)
View(inference)
t.test(nc_t$weight, nc_t$habit)
t.test(nc$weight, nc$habit)
t.test(nc_t$habit, nc_t$weight)
t_test(nc_t$habit, nc_t$weight)
t_test(nc$habit, nc$weight)
t_test(nc_t$habit, nc_t$weight)
ttest(nc_t$habit, nc_t$weight)
t.test(nc_t$habit, nc_t$weight)
summary(nc)
nc_t <- nc %>% select(weight, habit) %>% na.omit()
t.test(nc_t$habit, nc_t$weight)
nonsmokers = c(18,22,21,17,20,17,23,20,22,21)
smokers = c(16,20,14,21,20,18,13,15,17,21)
nonsmokers
smokers
t.test(nonsmokers, smokers, alternative="greater", var.equal=T)
t.test(nonsmokers, smokers)
t.test(nc$weight ~ nc$habit)
05151165+7.144273
.05151165+7.144273
.05151165-7.144273
05151165+6.828730
.05151165+6.828730
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ci", null = 0, alternative = "twosided", method = "theoretical")
0.0508+7.1443
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht",  method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ci",  method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "less", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "greater", method = "theoretical")
summary(ht)
summary(nc)
nc
t.test(weight ~ habit)
t.test(nc$weight ~ nc$habit)
t.test(nc$weight ~ nc$habit)
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ci",  method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "twotail", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", null = 0, alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type =  "ht", alternative = "twosided", method = "theoretical")
t.test(weight ~ marital)
t.test(nc$weight ~ nc$marital)
load(url(http://www.ats.ucla.edu/stat/stata/notes/hsb2))
load(url("http://www.ats.ucla.edu/stat/stata/notes/hsb2"))
read_dta("http://www.ats.ucla.edu/stat/stata/notes/hsb2")
?read_dta()
read_dta("hs.dta")
t.test(write ~ female)
t.test(write ~ female)
data<-read_dta("hs.dta")
t.test(data$write ~ data$female)
load(url("https://raw.githubusercontent.com/GarciaRios/govt_3990/gh-pages/Labs/lab4/data/ames.RData"))
load(url("https://raw.githubusercontent.com/GarciaRios/govt_3990/gh-pages/Labs/lab4/data/ames.RData"))
library(dplyr)
library(ggplot2)
set.seed(9102015)
n <- 60
samp <- sample_n(ames, n)
samp %>%
select(Lot.Area) %>%
summary()
```{r}
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
mean = mean(Lot.Area),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(Lot.Area))
set.seed(9102015)
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
load(url("https://raw.githubusercontent.com/GarciaRios/govt_3990/gh-pages/Labs/lab4/data/ames.RData"))
load(url("https://raw.githubusercontent.com/GarciaRios/govt_3990/gh-pages/Labs/lab4/data/ames.RData"))
library(dplyr)
library(ggplot2)
set.seed(9102015)
n <- 60
samp <- sample_n(ames, n)
samp %>%
select(Lot.Area) %>%
summary()
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
mean = mean(Lot.Area),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(Lot.Area))
set.seed(9102015)
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
ci
set.seed(9102015)
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
load(url("https://raw.githubusercontent.com/GarciaRios/govt_3990/gh-pages/Labs/lab4/data/ames.RData"))
library(dplyr)
library(ggplot2)
set.seed(9102015)
n <- 60
samp <- sample_n(ames, n)
samp %>%
select(Lot.Area) %>%
summary()
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
mean = mean(Lot.Area),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(Lot.Area))
set.seed(9102015)
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 *
(sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 *
(sd(Lot.Area) / sqrt(n)))
set.seed(9102015)
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 *
(sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 *
(sd(Lot.Area) / sqrt(n)))
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(dplyr)
library(ggplot2)
library(mosaic)
set.seed(9102015)
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 *
(sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 *
(sd(Lot.Area) / sqrt(n)))
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
library(ggplot2)
knitr::opts_chunk$set(eval = FALSE)
library(dplyr)
library(ggplot2)
load(url("https://stat.duke.edu/~mc301/data/nc.RData"))
str(nc)
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
7.144273 -	6.828730
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
load(url("https://stat.duke.edu/~mc301/R/fun/inference.RData"))
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 1,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 7,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = .3155,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", conf_level = .99, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0, conf_level = .99,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
conf_level = .98,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
conf_level = .97,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .97, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .98, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .97.5, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .975, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .976, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .977, method = "theoretical")
1-0.0199
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .978, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .98, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .981, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .9799, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .9798, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .9797, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .9798, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .97975, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .97976, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .97975, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979751, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979752, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979753, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979755, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979759, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .97976, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .97975, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .979759, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .9797599, method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
conf_level = .9797595, method = "theoretical")
infernce(y = weeks)
inference(y = weeks)
inference(y = weeks, data = nc)
inference(y = weeks, data = nc, ci)
inference(y = weeks, data = nc, type =ci)
inference(y = weeks, data = nc, type = "ci")
inference(y = weeks, data = nc, type = "ci",  method = "theoretical")
inference(y = weeks, data = nc, type = "ci",  method = "theoretical", statistic)
inference(y = weeks, data = nc, type = "ci",  method = "theoretical", statistic = "mean")
summary(ht)
summary(nc)
View(inference)
View(inference)
View(inference)
summary(nc)
ggplot(nc, aes(y = weight, x = habit)) +
geom_boxplot()
nc %>%
group_by(habit) %>%
summarise(n = n(weight))
nc %>%
group_by(habit) %>%
summarise(n = n())
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
View(ht_two_mean_theo)
7.1443- 6.8287,
7.1443 - 6.8287
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",  method = "theoretical")
View(inference)
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
library(dplyr)
library(ggplot2)
library(mosaic)
load(url("https://stat.duke.edu/~mc301/data/ames.RData"))
set.seed(3210170)
n <- 60
samp <- sample_n(ames, n)
summary(samp$area)
ggplot(samp, aes(x = area)) +
geom_histogram(binwidth = 100)
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
mean = mean(Lot.Area),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(Lot.Area))
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_95 * (sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_95 * (sd(Lot.Area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ggplot(ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
z_star_99 <- qnorm(0.99)
z_star_99
z_star_99
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(Lot.Area) - z_star_99 * (sd(Lot.Area) / sqrt(n)),
upper = mean(Lot.Area) + z_star_99 * (sd(Lot.Area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ggplot(ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = .1) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
lirary(stringi)
library(stringi)
library(stringi)
library(stringi)
install.packages("prediction")
?prediction
??prediction
library(prediction)
?prediction
require("datasets")
x <- lm(Petal.Width ~ Sepal.Length * Sepal.Width * Species, data = iris)
prediction(x)
preds <- prediction(x)
preds
summary(preds)
View(preds)
prediction(x, iris[1,])
pred1 <- prediction(x, iris[1,])
pred1
View(pred1)
prediction(x, lapply(iris, mean_or_mode))
pred2 <- prediction(x, lapply(iris, mean_or_mode))
View(pred2)
??newdata
??newdata
library(broom)
augment(x)
aug <- augment(x)
head(aug)
head(preds)
head(aug)
View(aug)
mod <- lm(mpg ~ wt + qsec, data = mtcars)
mod
tidy(mod)
glance(mod)
tidy(mod)
summary(mod)
tidy(mod)
d <- tidy(mod) %>% mutate(low = estimate - std.error,
high = estimate + std.error)
d
ggplot(d, aes(estimate, term, xmin = low, xmax = high, height = 0)) +
geom_point() +
geom_vline(xintercept = 0) +
geom_errorbarh()
head(augment(mod))
mtcars %>% head(6) %>% mutate(wt = wt + 1)
augment(mod, newdata = newdata)
newdata <- mtcars %>% head(6) %>% mutate(wt = wt + 1)
newdata
augment(mod, newdata = newdata)
au_new<-augment(mod, newdata = newdata)
au_new
au <- augment(mod, data = mtcars)
au
plot(mod, which = 1)
plot(mod, which = 1)
qplot(.fitted, .resid, data = au) +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
qplot(.fitted, .std.resid, data = au) +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
qplot(.fitted, .std.resid, data = au,
colour = factor(cyl))
qplot(mpg, .std.resid, data = au, colour = factor(cyl))
plot(mod, which = 2)
qplot(sample =.std.resid, data = au, stat = "qq") +
geom_abline()
plot(mod, which = 3)
qplot(.fitted, sqrt(abs(.std.resid)), data = au) + geom_smooth(se = FALSE)
plot(mod, which = 4)
qplot(seq_along(.cooksd), .cooksd, data = au)
plot(mod, which = 5)
qplot(.hat, .std.resid, data = au) + geom_smooth(se = FALSE)
ggplot(au, aes(.hat, .std.resid)) +
geom_vline(size = 2, colour = "white", xintercept = 0) +
geom_hline(size = 2, colour = "white", yintercept = 0) +
geom_point() + geom_smooth(se = FALSE)
qplot(.hat, .std.resid, data = au, size = .cooksd) +
geom_smooth(se = FALSE, size = 0.5)
plot(mod, which = 6)
ggplot(au, aes(.hat, .cooksd)) +
geom_vline(xintercept = 0, colour = NA) +
geom_abline(slope = seq(0, 3, by = 0.5), colour = "white") +
geom_smooth(se = FALSE) +
geom_point()
qplot(.hat, .cooksd, size = .cooksd / .hat, data = au) + scale_size_area()
a <- matrix(rnorm(20), nrow = 10)
b <- a + rnorm(length(a))
result <- lm(b ~ a)
tidy(result)
newdata <- mtcars %>%  mutate(wt = 1 )
newdata
