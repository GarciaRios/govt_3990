cex.axis = 1.5)
text(x = 0, y = 0.15, "95%", cex = 1.5, col = "white")
text(x = -2.8, y = 0.05, "2.5%", cex = 1.5)
text(x = 2.8, y = 0.05, "2.5%", cex = 1.5)
graphics::arrows(-3.7, 0.25, 1.96, 0.25, col = "red", lwd = 3, code = 3)
text(x = -1.4, y = 0.275, "97.5%", cex = 1.5, col = "red")
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(area))
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture, ci$capture))
qplot(data = ci_data, x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
params <- ames %>%
summarise(mu = mean(area))
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture, ci$capture))
ci
View(ci)
knitr::opts_chunk$set(eval = FALSE)
library(dplyr)
library(ggplot2)
library(mosaic)
set.seed(9438024)
normTail <- function (m = 0, s = 1, L = NULL, U = NULL, M = NULL, df = 1000,
curveColor = 1, border = 1, col = "#CCCCCC", xlim = NULL,
ylim = NULL, xlab = "", ylab = "", digits = 2, axes = 1,
detail = 999, xLab = c("number", "symbol"), cex.axis = 1,
xAxisIncr = 1, ...)
{
if (is.null(xlim)[1]) {
xlim <- m + c(-1, 1) * 3.5 * s
}
temp <- diff(range(xlim))
x <- seq(xlim[1] - temp/4, xlim[2] + temp/4, length.out = detail)
y <- dt((x - m)/s, df)/s
if (is.null(ylim)[1]) {
ylim <- range(c(0, y))
}
#cat(x)
#cat(y)
plot(x, y, type = "l", xlim = xlim, ylim = ylim, xlab = xlab,
ylab = ylab, axes = FALSE, col = curveColor, ...)
if (!is.null(L[1])) {
these <- (x <= L)
X <- c(x[these][1], x[these], rev(x[these])[1])
Y <- c(0, y[these], 0)
polygon(X, Y, border = border, col = col)
}
if (!is.null(U[1])) {
these <- (x >= U)
X <- c(x[these][1], x[these], rev(x[these])[1])
Y <- c(0, y[these], 0)
polygon(X, Y, border = border, col = col)
}
if (all(!is.null(M[1:2]))) {
these <- (x >= M[1] & x <= M[2])
X <- c(x[these][1], x[these], rev(x[these])[1])
Y <- c(0, y[these], 0)
polygon(X, Y, border = border, col = col)
}
if (axes == 1 || axes > 2) {
if (xLab[1] == "symbol") {
xAt <- m + (-3:3) * s
xLab <- expression(mu - 3 * sigma, mu - 2 * sigma,
mu - sigma, mu, mu + sigma, mu + 2 * sigma, mu +
3 * sigma)
}
else if (xLab[1] != "number") {
stop("Argument \"xLab\" not recognized.\n")
}
else {
temp <- seq(xAxisIncr, max(abs(xlim - m))/s, xAxisIncr) *
s
xAt <- m + c(-temp, 0, temp)
xLab <- round(xAt, digits = digits)
}
}
if (axes > 2) {
axis(1, at = xAt, labels = xLab, cex.axis = cex.axis)
buildAxis(2, c(y, 0), n = 3, nMax = 3, cex.axis = cex.axis)
}
else if (axes > 1) {
buildAxis(2, c(y, 0), n = 3, nMax = 3, cex.axis = cex.axis)
}
else if (axes > 0) {
axis(1, at = xAt, labels = xLab, cex.axis = cex.axis)
}
abline(h = 0)
}
load(url("https://stat.duke.edu/~mc301/data/ames.RData"))
n <- 60
samp <- sample_n(ames, n)
par(mar = c(3,0,0,0))
normTail(M = c(-1.96, 1.96), col = "#569BBD", axes = FALSE)
axis(1, at = c(-3, -1.96, 0, 1.96, 3), labels = c(NA, -1.96, 0, 1.96, NA),
cex.axis = 1.5)
text(x = 0, y = 0.15, "95%", cex = 1.5, col = "white")
text(x = -2.8, y = 0.05, "2.5%", cex = 1.5)
text(x = 2.8, y = 0.05, "2.5%", cex = 1.5)
graphics::arrows(-3.7, 0.25, 1.96, 0.25, col = "red", lwd = 3, code = 3)
text(x = -1.4, y = 0.275, "97.5%", cex = 1.5, col = "red")
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(area))
ci <- do(50) * ames %>%
sample_n(n) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture, ci$capture))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ci_data
qplot(data = ci_data, x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray")
load(url("https://stat.duke.edu/~mc301/data/nc.RData"))
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
load(url("https://stat.duke.edu/~mc301/R/fun/inference.RData"))
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
# LECTURE_NUM needs to be set elsewhere
suppressPackageStartupMessages({
library("foreign")
library("MASS")
library("car")
library("ggplot2")
library("dplyr")
library("stringr")
library("knitr")
library("readr")
library("tidyr")
library("broom")
})
getwd()
setwd("C:/Users/sig35/Google Drive/Work/Teaching/Courses/Puzzle Solving w Data/govt_3990/Labs/lab2")
getwd()
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
load(url("https://github.com/GarciaRios/govt_3990/raw/gh-pages/Labs/lab2/Data/cdc.RData"))
load(url("https://github.com/GarciaRios/govt_3990/raw/gh-pages/Labs/lab2/Data/cdc.RData"))
names(cdc)
View(cdc)
View(cdc)
str(cdc)
names(cdc)
ggplot(cdc, aes(x = age ))
ggplot(cdc, aes(x = age )) +
geom_histogram()
cdc %>% summary()
ggplot(cdc, aes(x = age )) +
geom_histogram(binwidth = 29)
ggplot(cdc, aes(x = age )) +
geom_histogram(binwidth = 1)
cdc %>% summary()
cdc %>%
select(age) %>%
summary()
cdc %>%
select(weight) %>%
summary()
cdc %>%
select(weight, wtdesire) %>%
summary()
cdc %>%
select(weight, wtdesire) %>%
summary()
cdc %>%
summarise(mean_wt = mean(weight),
sd_wt = sd(weight),
mean_ht = mean(ht),
sd_ht = sd(ht))
cdc %>%
summarise(mean_wt = mean(weight),
sd_wt = sd(weight),
mean_ht = mean(height),
sd_ht = sd(height))
selesct_stats<-
cdc %>%
summarise(mean_wt = mean(weight),
sd_wt = sd(weight),
mean_ht = mean(height),
sd_ht = sd(height))
View(selesct_stats)
cdc %>%
select(smoke100) %>%
summary()
cdc %>%
select(genhlth) %>%
summary()
cdc %>%
select(smoke100) %>%
table()
cdc %>%
select(smoke100) %>%
table() %>%
prop.table()
cdc %>%
select(smoke100) %>%
table() %>%
prop.table(.,2)
cdc %>%
select(smoke100) %>%
table() %>%
prop.table(,2)
cdc %>%
select(smoke100) %>%
table() %>%
prop.table(,1)
cdc %>%
select(smoke100) %>%
table() %>%
prop.table()
cdc %>%
select(gender, smoke100) %>%
table()
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table(,2)
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table(.,2)
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table(.,1)
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table(.,2)
cdc %>%
select(gender, smoke100) %>%
# table() %>%
prop.table(.,2)
?prop.table
cdc %>%
select(gender, smoke100) %>%
table() %>%
prop.table(.,2)
gggplot(cdc, aes(x = weight, y = height))
ggplot(cdc, aes(x = weight, y = height))
ggplot(cdc, aes(x = weight, y = height)) +
geom_point()
ggplot(cdc, aes(x = weight, y = height, color = "red")) +
geom_point()
ggplot(cdc, aes(x = weight, y = height, color = gender)) +
geom_point()
ggplot(cdc, aes(x = weight, y = height, color = gender)) +
geom_point() +
theme_bw()
ggplot(cdc, aes(x = gender))
ggplot(cdc, aes(x = gender)) +
geom_bar()
ggplot(cdc, aes(x = gender, fill = gender)) +
geom_bar()
ggplot(cdc, aes(x = gender, fill = smoke100)) +
geom_bar()
ggplot(cdc, aes(x = gender, fill = smoke100)) +
geom_bar(position =  position_dodge())
ggplot(cdc, aes(x = smoke100, fill = gender)) +
geom_bar(position =  position_dodge())
ggplot(cdc, aes(x = gender, y height))
ggplot(cdc, aes(x = gender, y = height))
ggplot(cdc, aes(x = gender, y = height)) +
geom_boxplot()
cdc <- cdc %>%
mutate(bmi = (weight / height^2) * 703)
ggplot(cdc, aes(y = bmi, x = genhlth)) +
geom_boxplot()
males <-
cdc %>%
filter(gender == "m")
View(males)
ggplot(males, aes(y = bmi, x = genhlth)) +
geom_boxplot()
females <-
cdc %>%
filter(gender == "f")
ggplot(females, aes(y = bmi, x = genhlth)) +
geom_boxplot()
males_and_over30 <- cdc %>%
filter(gender == "m" & age > 30)
setwd("C:/Users/sig35/Google Drive/Work/Teaching/Courses/Puzzle Solving w Data/students_datasets/2018/jacob")
library(foreign)
read.dct <- function(dct, labels.included = "yes") {
temp <- readLines(dct)
temp <- temp[grepl("_column", temp)]
switch(labels.included,
yes = {
pattern <- "_column\\(([0-9]+)\\)\\s+([a-z0-9]+)\\s+(.*)\\s+%([0-9]+)[a-z]\\s+(.*)"
classes <- c("numeric", "character", "character", "numeric", "character")
N <- 5
NAMES <- c("StartPos", "Str", "ColName", "ColWidth", "ColLabel")
},
no = {
pattern <- "_column\\(([0-9]+)\\)\\s+([a-z0-9]+)\\s+(.*)\\s+%([0-9]+).*"
classes <- c("numeric", "character", "character", "numeric")
N <- 4
NAMES <- c("StartPos", "Str", "ColName", "ColWidth")
})
temp_metadata <- setNames(lapply(1:N, function(x) {
out <- gsub(pattern, paste("\\", x, sep = ""), temp)
out <- gsub("^\\s+|\\s+$", "", out)
out <- gsub('\"', "", out, fixed = TRUE)
class(out) <- classes[x] ; out }), NAMES)
temp_metadata[["ColName"]] <- make.names(gsub("\\s", "", temp_metadata[["ColName"]]))
temp_metadata
}
read.dat <- function(dat, metadata_var, labels.included = "yes") {
read.fwf(dat, widths = metadata_var[["ColWidth"]], col.names = metadata_var[["ColName"]])
}
GSS_metadata <- read.dct("GSS.dct")
GSS_ascii <- read.dat("GSS.dat", GSS_metadata)
attr(GSS_ascii, "col.label") <- GSS_metadata[["ColLabel"]]
GSS <- GSS_ascii
GSS %>% names()
names(GSS)
View(GSS)
write.csv(GSS, "GSS.csv")
3 + 3
a <- 3
download.file("https://github.com/GarciaRios/govt_3990/raw/gh-pages/Labs/lab1/lab1.Rmd", destfile = "lab1.Rmd")
b <- 5
library(dplyr)
library(ggplot2)
load(url("https://github.com/GarciaRios/govt_3990/raw/gh-pages/Labs/lab1/Data/arbuthnot.RData"))
b<-5
b
arbuthnot
View(arbuthnot)
View(arbuthnot)
names(arbuthnot)
dim(arbuthnot)
glimpse(arbuthnot)
b <- c(3, 5, 9, 15)
b
b[3]
arbuthnot$year
arbuthnot$year
arbuthnot$boys
qplot(x = year, y = girls, data = arbuthnot)
# DO NOT ALTER CODE IN THIS CHUNK
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
qplot(x = year, y = girls, data = arbuthnot)
qplot(x = year, y = girls, data = arbuthnot)
qplot(x = year, y = girls, data = arbuthnot, geom = "line")
ggplot(arbuthnot, aes(x = year, y = girls))
ggplot(arbuthnot, aes(x = year, y = girls)) +
geom_point()
?qplot
5218 + 4683
arbuthnot$boys
arbuthnot$girls
arbuthnot$boys + arbuthnot$girls
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
?muatate
?mutate
arbuthnot <-
mutate(data= arbuthnot, total = boys + girls)
arbuthnot <-
mutate(.data= arbuthnot, total = boys + girls)
arbuthnot <-
mutate(.data= arbuthnot, total2 = boys + girls)
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
qplot(x = year, y = total, data = arbuthnot, geom = "line")
5218 / 4683
5218 / 4683
arbuthnot <- arbuthnot %>%
mutate(boy_to_girl_ratio = boys / girls)
arbuthnot <- arbuthnot %>%
mutate(boy_ratio = boys / total)
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
41*.26
41*.26.2
41*.262
41*.261
41*.18
41*.15.8
41*.158
41*.123
41*.1
564.02 - 562.44
download.file("https://github.com/GarciaRios/govt_3990/raw/gh-pages/Labs/lab6/lab6.Rmd", destfile = "lab6.Rmd")
load(url("https://github.com/GarciaRios/govt_3990/raw/gh-pages/Labs/lab6/acs.RData"))
acs_emp <- acs %>%
filter(employment == "employed")
library(dplyr)
acs_emp <- acs %>%
filter(employment == "employed")
ggplot(acs_emp, aes(y = income, x = gender))+
geom_boxplot()
library(ggplot2)
ggplot(acs_emp, aes(y = income, x = gender))+
geom_boxplot()
ggplot(acs_emp, aes(y = income, x = gender))+
geom_boxplot()
acs_emp %>%
group_by(gender) %>%
summarise(xbar = mean(income), s = sd(income), n = n())
load(url("https://github.com/GarciaRios/govt_3990/raw/gh-pages/Labs/lab5/inference.RData"))
acs_emp <- acs_emp %>%
mutate(emp_type = ifelse(hrs_work >= 40, "full time", "part time"))
acs_emp
acs_emp %>% count(hrs_work)
acs_emp %>% count(emp_type)
acs_emp <- acs_emp %>%
mutate(emp_type2 = case_when(hrs_work >= 40 ~ "full time",
TRUE ~ "part time"))
acs_emp %>% count(emp_type2)
acs_emp %>%
group_by(gender) %>%
count(emp_type) %>%
mutate(prop.table(n))
acs_emp %>%
count(emp_type, gender) %>%
mutate(prop.table(n))
acs_emp %>%
count(gender, emp_type) %>%
mutate(prop.table(n))
acs_emp %>%
group_by(gender) %>%
count(emp_type) %>%
mutate(pct = prop.table(n))
ggplot(acs_emp, aes(y = income, x = gender))+
geom_boxplot()
acs_emp %>%
group_by(gender) %>%
summarise(xbar = mean(income), s = sd(income), n = n())
acs_emp <- acs_emp %>%
mutate(emp_type2 = case_when(hrs_work >= 40 ~ "full time",
TRUE ~ "part time"))
acs_emp %>%
group_by(gender) %>%
count(emp_type) %>%
mutate(pct = prop.table(n))
acs_emp %>%
group_by(gender) %>%
count(emp_type) %>%
mutate(pct = prop.table(n),
xvar_sal = mean(salary))
acs_emp %>%
group_by(gender) %>%
count(emp_type) %>%
mutate(pct = prop.table(n),
xvar_sal = mean(income))
acs_emp
acs_emp %>%
group_by(gender) %>%
count(emp_type) %>%
mutate(pct = prop.table(n),
xvar_sal = mean(income ))
acs_emp %>%
group_by(gender)
acs_emp %>%
group_by(gender, emp_type) %>%
summarise(xvar_sal = mean(income))
acs_emp %>%
group_by(emp_type, gender) %>%
summarise(xvar_sal = mean(income))
acs_emp %>%
group_by(gender) %>%
summarise(xbar = mean(income), s = sd(income), n = n())
