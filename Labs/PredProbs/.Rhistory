aax_clean %>%
filter(LF <3) %>%
split(.$ethnicity) %>%
map(~ lm(Pan_eth_Org ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)") %>%
mutate(donation = "Pan Ethnic Org")
mods_keep <-
aax_clean %>%
filter(LF <3) %>%
split(.$ethnicity) %>%
map(~ lm(Keep_money ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)") %>%
mutate(donation = "Keep Money")
mods <- rbind(mods_keep, mods_own, mods_pan)
ggplot(mods, aes(x = donation %>% fct_relevel("Pan Ethnic Org"), y = estimate, color = term ,
ymin = estimate - (1.4*std.error),
ymax = estimate + (1.4*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
facet_wrap(~ ethnicity, scales = "free_x", ) +
labs(x = "", color = "Treatment", y = "Average Treatment Effect")
# Chunk 18
mods_id_CO <-
aax_clean %>%
filter(LF <3) %>%
split(.$ethnicity) %>%
map(~ lm(CO_id_diff ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_id_CO, aes(x = ethnicity %>% fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.5*std.error),
ymax = estimate + (1.5*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect (Change in CO ID)")
# Chunk 19
mods_id_PA <-
aax_clean %>%
filter(LF <3) %>%
split(.$ethnicity) %>%
map(~ lm(PA_id_diff ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_id_PA, aes(x = ethnicity %>% fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.5*std.error),
ymax = estimate + (1.5*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect (Change in Panethnic ID)")
# Chunk 20
mods_id_AM <-
aax_clean %>%
filter(LF <3) %>%
split(.$ethnicity) %>%
map(~ lm(AM_id_diff ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_id_AM, aes(x = ethnicity %>% fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.5*std.error),
ymax = estimate + (1.5*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect (Change in American ID)")
# Chunk 21
mods_trump <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(trump_app ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_trump, aes(x = ethnicity %>%  fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.4*std.error),
ymax = estimate + (1.4*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect")
# Chunk 22
mods_solve <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(solve_prob ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_solve, aes(x = ethnicity %>%  fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.6*std.error),
ymax = estimate + (1.6*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect")
# Chunk 23
mods_own <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(Own_eth_Org ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)") %>%
mutate(donation = "Own Ethnicity Org")
mods_pan <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(Pan_eth_Org ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)") %>%
mutate(donation = "Pan Ethnic Org")
mods_keep <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(Keep_money ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)") %>%
mutate(donation = "Keep Money")
mods <- rbind(mods_keep, mods_own, mods_pan)
ggplot(mods, aes(x = donation %>% fct_relevel("Pan Ethnic Org"), y = estimate, color = term ,
ymin = estimate - (1.4*std.error),
ymax = estimate + (1.4*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
facet_wrap(~ ethnicity, scales = "free_x", ) +
labs(x = "", color = "Treatment", y = "Average Treatment Effect")
# Chunk 24
mods_id_CO <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(CO_id_diff ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_id_CO, aes(x = ethnicity %>% fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.5*std.error),
ymax = estimate + (1.5*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect (Change in CO ID)")
# Chunk 25
mods_id_PA <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(PA_id_diff ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_id_PA, aes(x = ethnicity %>% fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.5*std.error),
ymax = estimate + (1.5*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect (Change in Panethnic ID)")
# Chunk 26
mods_id_AM <-
aax_clean %>%
filter(LF >2) %>%
split(.$ethnicity) %>%
map(~ lm(AM_id_diff ~ treatment, data = .)) %>%
map(tidy) %>%
enframe(name = "ethnicity") %>%
unnest() %>%
filter(term != "(Intercept)")
ggplot(mods_id_AM, aes(x = ethnicity %>% fct_rev(), y = estimate, color = term ,
ymin = estimate - (1.5*std.error),
ymax = estimate + (1.5*std.error))) +
geom_pointrange(position = position_dodge(width = .5), size = .8) +
scale_color_brewer(palette = "Dark2", labels = c("Chinese", "Asian American")) +
geom_hline(yintercept = 0, linetype = "dashed", color = "maroon") +
theme_bw() +
coord_flip()  +
labs(x = "", color = "Treatment", y = "Average Treatment Effect (Change in American ID)")
library(tidyverse)
load(url("http://www.openintro.org/stat/data/evals.RData"))
View(evals)
evals %>% count(gender)
evals %>% count(gender)
evals %>%
count(gender) %>%
mutate(Pct = prop.table(n))
evals %>%
count(gender) %>%
mutate(Pct = prop.table(n)) %>%
pander()
evals %>%
count(gender, rank) %>%
mutate(Pct = prop.table(n)) %>%
pander()
evals %>%
count(gender, rank) %>%
mutate(Pct = prop.table(n))
evals %>%
count(gender, rank) %>%
mutate(Pct = prop.table(n))
dist_gender <-
evals %>%
count(gender, rank) %>%
mutate(Pct = prop.table(n))
dist_gender <-
evals %>%
count(gender, rank) %>%
mutate(Pct = prop.table(n))
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank))
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col()
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge())
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw()
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_minimal()
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw()
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw() +
lab(x = "Gender")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw() +
labs(x = "Gender")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency", title = "Distribiution of Ranak and Gender")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency", title = "Distribiution of Rank and Gender")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency",
title = "Distribiution of Rank and Gender",
fill = "Rank")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
scale_fill_brewer(palette = "Accent")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
scale_fill_brewer(palette = "Accent") +
theme_bw() +
labs(x = "Gender",  y = "% Frequency",
title = "Distribiution of Rank and Gender",
fill = "Rank")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
scale_fill_brewer(palette = "Accent", labels = c("Teaching", "Tenuere Track", "Tenured")) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency",
title = "Distribiution of Rank and Gender",
fill = "Rank")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
scale_fill_brewer(palette = "Accent", labels = c("Sergio", "Tenuere Track", "Tenured")) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency",
title = "Distribiution of Rank and Gender",
fill = "Rank")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
scale_fill_brewer(palette = "Accent",
labels = c("Teaching ", "Tenuere Track", "Tenured")) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency",
title = "Distribiution of Rank and Gender",
fill = "Rank") +
theme(legend.position = "bottom")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
scale_fill_brewer(palette = "Accent",
labels = c("Teaching ", "Tenuere Track", "Tenured")) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency",
title = "Distribiution of Rank and Gender",
fill = "Rank") +
theme(legend.position = "bottom") +
ggsave("dist_graph.pdf")
ggplot(dist_gender, aes(x = gender, y = Pct, fill = rank)) +
geom_col(position = position_dodge()) +
scale_fill_brewer(palette = "Accent",
labels = c("Teaching ", "Tenuere Track", "Tenured")) +
theme_bw() +
labs(x = "Gender",  y = "% Frequency",
title = "Distribiution of Rank and Gender",
fill = "Rank") +
theme(legend.position = "bottom") +
ggsave("dist_graph.pdf")
m_gend <- lm(score ~ gender, data = evals)
summary(m_model)
summary(m_gend)
stargazer(m_gend)
stargazer(m_gend, type = "html")
stargazer(m_gend, type = "text")
stargazer(m_gend, type = "rtf")
?stargazer
stargazer(m_gend, type = "text", out = "bv_model")
stargazer(m_gend, type = "text", out = "bv_model.doc")
stargazer(m_gend, type = "text", out = "bv_model.txt")
m_gend <- lm(score ~ gender, data = evals)
m_gend <- lm(score ~ gender, data = evals)
summary(m_gend)
hypx <- data.frame(gender = c("female", "male"))
hypx
predict(m_gend, newdata = hypx, interval = "confidence")
preds<- predict(m_gend, newdata = hypx, interval = "confidence")
preds_gen <- predict(m_gend, newdata = hypx, interval = "confidence")
preds_gen_df <- cbind(preds_gen, hypx)
preds_gen_df
evals %>%
count(gender) %>%
mutate(Pct = prop.table(n)) %>%
pander()
preds_gen_df
ggplot(preds_gen_df, aes(x = gender, y = fit))
ggplot(preds_gen_df, aes(x = gender, y = fit)) +
geom_point()
ggplot(preds_gen_df, aes(x = gender, y = fit)) +
geom_point(size = 1)
ggplot(preds_gen_df, aes(x = gender, y = fit)) +
geom_point(size = 2)
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender)) +
geom_point(size = 2)
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender)) +
geom_point(size = 2) +
theme_bw
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender)) +
geom_point(size = 2) +
theme_bw()
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender)) +
scale_color_brewer(palette = "Accent") +
geom_point(size = 2) +
theme_bw()
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender)) +
scale_color_brewer(palette = "Accent") +
geom_pointrange(size = 2) +
theme_bw()
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender)) +
geom_pointrange(size = 2) +
scale_color_brewer(palette = "Accent") +
theme_bw()
preds_gen_df
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender,
ymin = lwr,
ymax = upr)) +
geom_pointrange(size = 2) +
scale_color_brewer(palette = "Accent") +
theme_bw()
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender,
ymin = lwr,
ymax = upr)) +
geom_pointrange(size = 1) +
scale_color_brewer(palette = "Accent") +
theme_bw()
ggplot(preds_gen_df, aes(x = gender, y = fit,
color  =gender,
ymin = lwr,
ymax = upr)) +
geom_pointrange(size = 1.5) +
scale_color_brewer(palette = "Accent") +
theme_bw()
summary(evals$age) %>%
pander()
m_age <- lm(score ~ age, data = evals)
summary(m_age)
hypx_age <- data.frame(age = c(25, 45, 55, 65, 75))
hypx_age
preds_age<- predict(m_age, newdata = hypx_age, interval = "confidence")
preds_age
hypx_age <- data.frame(age = c(25, 45, 65, 85, 105))
preds_age<- predict(m_age, newdata = hypx_age, interval = "confidence")
preds_age_df <- cbind(preds_age, hypx_age)
preds_age_df
ggplot(preds_age_df, aes(x = age, y = fit))
ggplot(preds_age_df, aes(x = age, y = fit)) +
geom_line()
ggplot(preds_age_df, aes(x = age, y = fit)) +
geom_line() +
geom_ribbon()
ggplot(preds_age_df, aes(x = age, y = fit,
ymin = lwr,
ymax = upr)) +
geom_line() +
geom_ribbon()
ggplot(preds_age_df, aes(x = age, y = fit,
ymin = lwr,
ymax = upr)) +
geom_line() +
geom_ribbon(alpha = .3)
summary(m_mult <- lm(score ~ age + bty_avg  + gender + rank, data = evals))
summary(m_mult <- lm(score ~ age + bty_avg  + gender + rank, data = evals))
summary(m_mult <- lm(score ~ age + bty_avg  + gender, data = evals))
seq(18,50)
hypdata <- expand.grid(age = seq(18,50),
gender = c("female", "male"),
bty_avg = mean(evals$bty_avg))
hypdata
preds_mult<-predict(m_mult, hypdata, interval = "confidence")
preds_mult
preds_mult_df <- cbind(preds_mult, hypdata)
preds_mult_df
gglot(preds_mult_df, aes(x = age, y = fit)) +
geom_line()
ggplot(preds_mult_df, aes(x = age, y = fit)) +
geom_line()
ggplot(preds_mult_df, aes(x = age, y = fit,
color = gneder)) +
geom_line()
ggplot(preds_mult_df, aes(x = age, y = fit,
color = gender)) +
geom_line()
ggplot(preds_mult_df, aes(x = age, y = fit,
color = gender,
ymin = lwr, ymax = upr)) +
geom_line() +
geom_ribbon()
ggplot(preds_mult_df, aes(x = age, y = fit,
color = gender,
fill =  gender
ymin = lwr, ymax = upr)) +
geom_line() +
geom_ribbon(alpha = .7) +
theme_bw()
ggplot(preds_mult_df, aes(x = age, y = fit,
color = gender,
fill =  gender,
ymin = lwr, ymax = upr)) +
geom_line() +
geom_ribbon(alpha = .7) +
theme_bw()
hypdata <- evals %>% with(expand.grid(
age = mean(age),
gender = c("female", "male"),
bty_avg = seq(1, 8)
))
preds_mult<-predict(m_mult, hypdata, interval = "confidence")
preds_mult_df <- cbind(preds_mult, hypdata)
preds_mult_df
ggplot(preds_mult_df, aes(x = bty_avg, y = fit,
color = gender,
fill =  gender,
ymin = lwr, ymax = upr)) +
geom_line() +
geom_ribbon(alpha = .7) +
theme_bw()
